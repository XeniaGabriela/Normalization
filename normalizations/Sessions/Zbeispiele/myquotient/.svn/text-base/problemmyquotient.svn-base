                     SINGULAR                                 /
 A Computer Algebra System for Polynomial Computations       /   version 3-1-2
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Oct 2010
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \
> ring r=0,(x,y,z),dp;
> ideal I=x,2;
> I=std(I);
 
> insert neuklinzmann





proc myquotient(i,j1,j2) {                                                 
	def BAS=basering;                                                  // computes the quotient (j1:j2) in the the basering modulo the ideal i
	int j;
	ideal q=1;                                                        
	for(j=1; j <= size(j2); j++){                                      // if the ideal j2=(f_1,...,f_s), so for all generators f_i of j2 
		ideal s=j2[j],-j1,-i;                                      // let ideal s=(f_i,-j1,-i), then compute the matrix m of syzygies of s
		matrix m=matrix(syz(s));                                   // take the ideal qq generated by the first row of the matrix m                      
		m=m[1,1..ncols(m)];                                        // the intersection of all those ideals is the quotient
		matrix n[1][ncols(m)]=m[1,1..ncols(m)];
		ideal qq=n;
		q=myintersect(q,qq);
	}
	return(std(q));
}



> ideal I=x,2;
// ** redefining I **
> ideal J=z;
> myquotient(0,I,J);
_[1]=1
> ideal I=xy,xz;
// ** redefining I **
> ideal J=z;
// ** redefining J **
> myquotient(0,I,J);
_[1]=x
> I=2,x;
> J=z;
> myquotient(0,I,J);
_[1]=1                     ???

> ideal q=1;
> ideal s=J[1],-I,-0;
> s;
s[1]=z
s[2]=-2
s[3]=-x
s[4]=0
> matrix m=matrix(syz(s));
> m;
m[1,1]=0
m[1,2]=2
m[1,3]=0
m[2,1]=0
m[2,2]=z
m[2,3]=x
m[3,1]=0
m[3,2]=0
m[3,3]=-2
m[4,1]=1
m[4,2]=0
m[4,3]=0
> m=m[1,1..ncols(m)];
> m;
m[1,1]=0
m[1,2]=2
m[1,3]=0
m[2,1]=0
m[2,2]=0
m[2,3]=0
m[3,1]=0
m[3,2]=0
m[3,3]=0
m[4,1]=0
m[4,2]=0
m[4,3]=0
> matrix n[1][ncols(m)]=m[1,1..ncols(m)];
> n;
n[1,1]=0
n[1,2]=2
n[1,3]=0
> ideal qq=n;
> qq;
qq[1]=0
qq[2]=2
qq[3]=0
> q=myintersect(q,qq);
> q;
q[1]=1
> 
